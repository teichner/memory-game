<svg width="1000" height="1000" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <pattern id="card-pattern" [attr.viewBox]="patternViewBox" [attr.width]="patternPercent" [attr.height]="patternPercent">
            <rect x="0" y="0" [attr.width]="patternSize" [attr.height]="patternSize" [attr.fill]="backFill" />
            <polygon [attr.points]="patternPolygonPoints" stroke="black" [attr.fill]="backFill" stroke-width="1" />
        </pattern>
    </defs>
    <filter id="card-lighting">
        <!-- <feSpecularLighting result="light" specularExponent="25" lighting-color="white">
             <fePointLight x="-5" y="-5" z="30"></fePointLight>
             </feSpecularLighting> -->
        <feDiffuseLighting result="light" lighting-color="white">
            <!-- <feDistantLight azimuth="30" elevation="100" /> -->
            <fePointLight x="20" y="0" z="120" />
        </feDiffuseLighting>
        <!-- <feComposite in="SourceGraphic" in2="light" result="new-image" operator="arithmetic" k1="0" k2="1" k3="1" k4="0" ></feComposite> -->
        <feComposite in="SourceGraphic" in2="light" result="new-image" operator="arithmetic" k1="1" k2="0" k3="0" k4="0" ></feComposite>
        <feComposite in="new-image" in2="SourceGraphic" operator="in" />
    </filter>
    <g *ngFor="let row of rows; index as i" [attr.transform]="rowTransform(i)">
        <g *ngFor="let card of row; index as j" [attr.transform]="cellTransform(j)" (click)="onCardClick(card)" filter="url(#card-lighting)" >
            <ng-template [ngIf]="!isCardHidden(card)">
                <rect class="frame" x="0" y="0" [attr.width]="cardSize" [attr.height]="cardSize" rx="5" ry="5"></rect>
                <g *ngIf="isFaceUp(card); else faceDown">
                    <rect class="body" [attr.x]="frameOffset" [attr.y]="frameOffset" [attr.width]="frameSize" [attr.height]="frameSize" [attr.fill]="cardColor(card)" rx="5" ry="5"></rect>
                    <circle [attr.cx]="circleX" [attr.cy]="circleY" [attr.r]="circleRadius" fill="white"></circle>
                    <text class="card-text" [attr.x]="circleX" [attr.y]="circleY" [attr.fill]="cardColor(card)" text-anchor="middle" dominant-baseline="central">{{ card.value }}</text>
                </g>
                <ng-template #faceDown>
                    <g >
                        <rect class="body" [attr.x]="frameOffset" [attr.y]="frameOffset" [attr.width]="frameSize" [attr.height]="frameSize" fill="url(#card-pattern)" rx="5" ry="5"></rect>
                    </g>
                </ng-template>
            </ng-template>
        </g>
    </g>
    <g class="dashboard" [attr.transform]="dashboardTransform">
        <rect x="0" y="0" fill="hsl(36, 50%, 20%)" width="100%" height="150" stroke="gold" stroke-width="5" rx="10" ry="10"></rect>
        <text x="50%" y="100" text-anchor="middle" dominant-anchor="middle" fill="gold">{{ dashboardText }}</text>
    </g>
</svg>
